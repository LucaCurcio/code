# -*- coding: utf-8 -*-
"""modelos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HBy0qWSAacWeUDpp1B2K_936_RXtgkmG
"""

import pandas as pd
from sklearn import tree
from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor

#!wget https://github.com/cassiasamp/semcomp/tree/master/dados/treino.csv
#!wget https://github.com/cassiasamp/semcomp/blob/master/dados/teste.csv

dados_treino = pd.read_csv('treino.csv', index_col='Id')
dados_teste = pd.read_csv('teste.csv', index_col='Id')

caracteristicas = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd' ]

X = dados_treino[caracteristicas].copy()
Y = dados_treino.SalePrice

X_treino, X_valid, Y_treino, Y_valid = train_test_split(X, Y, train_size=0.8, test_size=0.2, random_state=42)

modelo_1 = tree.DecisionTreeRegressor(random_state=42)

modelo_1.fit(X_treino, Y_treino)
preds_1 = modelo_1.predict(X_valid)
mae_1 = mean_absolute_error(Y_valid, preds_1)

modelo_2 = RandomForestRegressor(random_state=42)

modelo_2.fit(X_treino, Y_treino)
preds_2 = modelo_2.predict(X_valid)
mae_2 = mean_absolute_error(Y_valid, preds_2)

print('MAE do modelo de arvore', mae_1)
print('MAE do modelo de floresta', mae_2)

modelo_3 = RandomForestRegressor(n_estimators=50, random_state=42)
modelo_4 = RandomForestRegressor(n_estimators=100, random_state=42)
modelo_5 = RandomForestRegressor(n_estimators=200, max_depth=7, random_state=42)
modelo_6 = RandomForestRegressor(n_estimators=100, criterion='mse', random_state=42)
modelo_7 = RandomForestRegressor(n_estimators=50, min_samples_split=20, random_state=42)

modelos = [modelo_1, modelo_2, modelo_3, modelo_4, modelo_5, modelo_6, modelo_7 ]

for i in range(0, len(modelos)):
  modelos[i].fit(X_treino, Y_treino)
  preds = modelos[i].predict(X_valid)
  mae = mean_absolute_error(Y_valid, preds)
  print('MAE do modelo %d: %d' % (i+1, mae))

X_teste = dados_teste[caracteristicas].copy()

modelo_3.fit(X, Y)

preds_teste = modelo_3.predict(X_teste)

res = pd.DataFrame({'Id': X_teste.index, 'SalePrice': preds_teste})

res.to_csv('resultado_modelos.csv')